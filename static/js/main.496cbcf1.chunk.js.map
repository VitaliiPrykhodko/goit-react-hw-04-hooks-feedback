{"version":3,"sources":["Statistics/Statistics.jsx","FeedbackOptions/FeedbackOptions.jsx","Section/Section.jsx","Notification/Notification.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positive","className","defaultProps","FeedbackOptions","options","onClick","map","option","i","type","Section","title","children","Notification","message","App","useState","setGood","setBad","setNeutral","feedback","countTotalFeedback","Object","values","reduce","acc","stat","keys","prev","Math","floor","ReactDOM","render","document","getElementById"],"mappings":"8NAEMA,EAAa,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/C,OACE,0BAASC,UAAU,aAAnB,UACE,4CACA,qBAAIA,UAAU,kBAAd,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,EAAX,SAEF,6BACE,oDAAuBC,EAAvB,gBAOVL,EAAWO,aAAe,CACxBH,MAAO,EACPC,SAAU,GAWGL,QCrBAQ,EAjBS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAClC,OACE,qBAAKJ,UAAU,YAAf,SACGG,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBAAQP,UAAU,MAAMQ,KAAK,SAAiBJ,QAAS,kBAAIA,EAAQE,IAAnE,SACGA,GADwCC,SCUpCE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASX,UAAU,UAAnB,UACE,6BAAKU,IACJC,MCMQC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,qBAAKb,UAAU,eAAf,SACE,mBAAGA,UAAU,uBAAb,SAAqCa,OC0D1BC,EAxDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAAsBD,mBAAS,GAA/B,mBAAOlB,EAAP,KAAYoB,EAAZ,KACA,EAA8BF,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBsB,EAAhB,KAEMC,EAAW,CAAExB,OAAME,MAAKD,WAexBwB,EAAqB,WACzB,OAAOC,OAAOC,OAAOH,GAAUI,QAAO,SAACC,EAAKC,GAE1C,OADAD,GAAOC,IAEN,IAOL,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,CAASU,MAAM,wBAAf,SACE,cAAC,EAAD,CACEP,QAASkB,OAAOK,KAAKP,GACrBf,QA7BwB,SAACE,GAC/B,OAAQA,GACN,IAAK,OACH,OAAOU,GAAQ,SAACW,GAAD,OAAUA,EAAO,KAClC,IAAK,MACH,OAAOV,GAAO,SAACU,GAAD,OAAUA,EAAO,KACjC,IAAK,UACH,OAAOT,GAAW,SAACS,GAAD,OAAUA,EAAO,KACrC,QACE,aAuBF,cAAC,EAAD,UACGP,IACC,cAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,IACPrB,SAlBD6B,KAAKC,MAAOV,EAASxB,KAAOyB,IAAwB,OAqBrD,cAAC,EAAD,CAAcP,QAAQ,4B,MClDhCiB,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.496cbcf1.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positive }) => {\n  return (\n    <section className=\"Statistics\">\n      <h2>Statistics</h2>\n      <ul className=\"statistics_list\">\n        <li>\n          <p>Good: {good}</p>\n        </li>\n        <li>\n          <p>Neutral: {neutral}</p>\n        </li>\n        <li>\n          <p>Bad: {bad}</p>\n        </li>\n        <li>\n          <p>Total: {total} </p>\n        </li>\n        <li>\n          <p>Positive feedback: {positive}%</p>\n        </li>\n      </ul>\n    </section>\n  );\n};\n\nStatistics.defaultProps = {\n  total: 0,\n  positive: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positive: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onClick }) => {\n  return (\n    <div className=\"buttonBox\">\n      {options.map((option, i) => (\n        <button className=\"btn\" type=\"button\" key={i} onClick={()=>onClick(option)}>\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className=\"section\">\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node\n}\n\nexport default Section","import PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => (\n  <div className=\"notification\">\n    <p className=\"notification_message\">{message}</p>\n  </div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired\n}\n\nexport default Notification;\n","import { useState } from \"react\";\nimport Statistics from \"./Statistics/Statistics.jsx\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions.jsx\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Notification/Notification.jsx\";\n\nconst App = function () {\n  const [good, setGood] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n\n  const feedback = { good, bad, neutral };\n\n  const handleIncrementFeedback = (option) => {\n    switch (option) {\n      case \"good\":\n        return setGood((prev) => prev + 1);\n      case \"bad\":\n        return setBad((prev) => prev + 1);\n      case \"neutral\":\n        return setNeutral((prev) => prev + 1);\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(feedback).reduce((acc, stat) => {\n      acc += stat;\n      return acc;\n    }, 0);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.floor((feedback.good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={Object.keys(feedback)}\n          onClick={handleIncrementFeedback}\n        />\n      </Section>\n      <Section>\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positive={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './main.scss'\n\nReactDOM.render(\n    <App\n    />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}